getwd()
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix2.R')
source('~/Desktop/coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Desktop/oath.R')
source('~/Desktop/oath.R')
source('~/Desktop/oath.R')
install.packages("httpuv")
library("httpuv", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
source('~/Desktop/oath.R')
source('~/Desktop/oath.R')
source('~/Desktop/oath.R')
json1=content(req)
json2=jsonLite::fromJSON(toJSON(json1))
install.packages("jsonlite")
library("jsonlite", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
json2=jsonLite::fromJSON(toJSON(json1))
json2=jsonLite::fromJSON(toJSON(json1))
json2=jsonlite::fromJSON(toJSON(json1))
json2
json2[1,1:4]
View(json2)
DT<-fread("/home/Calin/Desktop/data.csv")
DT<-read.table("/home/Calin/Desktop/getdata_data_ss06pid.csv")
DT<-read.table("/home/Calin/Desktop/getdata_data_ss06pid.csv",header=TRUE,seq=";")
DT<-read.table("/home/Calin/Desktop/getdata_data_ss06pid.csv",header=TRUE,sep=";")
View(DT)
DT<-read.table("/home/Calin/Desktop/getdata_data_ss06pid.csv",header=TRUE,sep=",")
View(DT)
acs<-read.table("/home/Calin/Desktop/getdata_data_ss06pid.csv",header=TRUE,sep=",")
sqldf("select pwgtp1 from acs")
install.packages("sqldf")
library("sqldf", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
sqldf("select pwgtp1 from acs")
a=sqldf("select pwgtp1 from acs")
View(a)
a=sqldf("select * from acs")
View(a)
a=sqldf("select * from acs where AGEP < 50 and pwgtp1")
View(a)
sqldf("select pwgtp1 from acs where AGEP < 50")
a=sqldf("select pwgtp1 from acs where AGEP < 50")
View(a)
sqldf("select distinct AGEP from acs")
sqldf("select unique * from acs")
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htlm=readLines(con)
close(con)
htlm
nchar(con)
nchar(con[10])
nchar(con[100])
con[100]
con[10]
con[1]
con
nchar(htlm)
nchar(htlm[10])
nchar(htlm[20])
nchar(htlm[30])
nchar(htlm[100])
DT<-read.table("getdata_wksst8110.for")
x <- read.fwf(
file=url("getdata_wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
x <- read.fwf(
file="getdata_wksst8110.for",
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
x <- read.fwf(
file="/home/Calin/Desktop/getdata_wksst8110.for",
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
sum(x$V4)
sum(x$V9)
sum(x$V3)
sum(x$V5)
swirl()
library("swirl", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
swirl()
install_from_swirl("Statistical Inference")
swirl()
install.packages("jpeg")
install.packages("devtools")
install.packages("jpeg")
install.packages("curl")
install.packages("jpeg")
install.packages("jpeg")
swirl()
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
source('~/Desktop/coursera-statinference-master/statinference_project_part1_full.R')
source('~/Desktop/coursera-statinference-master/statinference_project_part1_full.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
?rowmeans
?rowMeans
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
hist(row_means)
lapply(exponentialsMatrix,mean())
lapply(exponentialsMatrix,mean
)
s=lapply(exponentialsMatrix,mean)
hist(s)
s=sapply(exponentialsMatrix,mean)
hist(s)
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
mean(means)
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
?dnorm
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
install.packages("pdf")
summary(cars)
summary(cars)
install.packages("TExPosition")
install.packages("ifultools")
install.packages("~/oberdiek.tds.zip", repos = NULL)
install.packages("~/oberdiek.tds.zip", repos = NULL)
install.packages("~/Downloads/ifluatex.dtx", repos = NULL)
install.packages("~/oberdiek/doc/latex/oberdiek/ifluatex.pdf", repos = NULL)
install.packages("ifluatex")
install.packages("~/Downloads/install-tl-unx.tar.gz", repos = NULL, type = "source")
devtools::install_github("rstudio/rmarkdown")
texhash
?pch
?density
?dnorm
xfit
plot(xfit)
```
data(ToothGrowth)
head(ToothGrowth)
View(ToothGrowth)
?sample
View(ToothGrowth)
t.test(dose~supp, paired=F, var.equal=T, data=ToothGrowth)
t.test(len~def, paired=F, var.equal=T, data=ToothGrowth)
t.test(len~dose, paired=F, var.equal=T, data=ToothGrowth)
t.test(len~supp, paired=F, var.equal=T, data=ToothGrowth)
t.test(len,supp, paired=F, var.equal=T, data=ToothGrowth)
View(ToothGrowth)
?ToothGrowth
View(ToothGrowth)
var(ToothGrowth[1:30])
View(ToothGrowth)
var(ToothGrowth[1:30,1])
var(ToothGrowth[30:60,1])
suppCI <- t.test(len~supp, paired=F, var.equal=T, data=ToothGrowth)
supp.result <- data.frame("p-value"=suppCI$pvalue,"Low confidence"=suppCI$conf[1],
"High confidence"=suppCI$conf[2])
supp.result <- data.frame("p-value"=suppCI$pvalue,"Low confidence"=suppCI$conf.int[1],
"High confidence"=suppCI$conf.int[2])
supp.result <- data.frame("p-value"=suppCI$p.value,"Confidence Interval"=rbind(suppCI$conf.int[1],":",suppCI$conf.int[2]))
View(supp.result)
View(supp.result)
round(7.56700642014122)
round(7.56700642014122,4)
t.test(len~supp, paired=F, var.equal=T, data=ToothGrowth)
ToothGrowth[which(ToothGrowth$dose==.5 && ToothGrowth$supp=="OJ"),1]
View(ToothGrowth)
ToothGrowth[which(ToothGrowth$dose==.5 && ToothGrowth$supp=="OJ"),1]
ToothGrowth[which(ToothGrowth$dose==05 && ToothGrowth$supp=="OJ"),1]
ToothGrowth[which(ToothGrowth$dose==0.5 && ToothGrowth$supp=="OJ"),1]
ToothGrowth[which(ToothGrowth$dose==0.5),1]
ToothGrowth[which(ToothGrowth$supp=="OJ"),1]
ToothGrowth[which(ToothGrowth$dose==0.5 && ToothGrowth$supp=="OJ"),1]
ToothGrowth[which(ToothGrowth$dose==0.5 & ToothGrowth$supp=="OJ"),1]
t05OJVC<-t.test(D05OJ~D05VC,paired=F)
?t.test
3.919514e-02
9.638516e-01
View(ToothGrowth)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
t.test(x,y)
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
p1<-predict(fit,data.frame(x), interval="confidence")
plot(x,y,xlab='Weight (1000lb)',ylab='MPG')
abline(fit,col="red")
lines(x,p1[,2],col="purple")
lines(x,p1[,3],col="purple")
?mtcars
head(mtcars)
head(mtcars)
install.packages("~/Downloads/framed.zip", repos = NULL)
\usepackage mathspec
install.packages("~/Downloads/mathspec.zip", repos = NULL)
source('~/Desktop/coursera/statisticalInferenceProject/main.R')
swirl
swirl()
library("swirl", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975,df)
qt(.975)
qt(.975,2)
myplot2(20)
sleep
g1
range(g1)
range(g2)
difference<-g2-g1
mean(difference)
s<-sd(difference)
mn+c(-1,1)*qnorm(.975,9)*sd
mn+c(-1,1)*qnorm(.975,9)*s
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
x$conf.int
difference$conf.int
x$conf.int
t.test(x)$conf.int
t.test(difference)$conf.int
sp<-
))
sp<-7*15.34^2 + 20*1.3^2
sp <- 7*15.34^2 + 20*18.23^2
ns<-27
sp<-sqrt(sp/ns)
132.86-127.44 + c(-1,1) * qnorm(.975,27)*sp
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
var(g1,g2)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g1,g2)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num<-8*15.34^2
num <- (15.34^2/8 + 18.23^2/21)^2
den<-s^4/n^2/(n-1)
den<-15.34^4/27^2/^27
den<- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf<- num/den
qt(.975,mydf)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
10/sqrt(100)
2
32-30/10/4
(32-30)/(10/4)
15
qt(.95,15)
fs
dim(fs)
t.tests(fs$sheight-fs$fheight)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybdin
mybin
7
mybin[7]=.144 and mybin[8]=.035
mybin[7]=.144
7
6
8
We load the dataset and transform some elements into factors
source('~/Desktop/coursera/linearRegression/main.R')
We load the dataset and transform some elements into factors
getwd()
data(mtcars)
summary(mtcars)
?mtcars
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am,labels=c("Automatic","Manual"))
summary(mtcars)
pairs(mpg~.,data=mtcars)
pairs(mpg~.,data=mtcars)
g1 <- ggplot(mpg, aes(x=factor(am),y=mpg, guides(fill=guide_legend(title=NULL)),fill=factor(am)))
library("ggplot2", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
g1 <- ggplot(mpg, aes(x=factor(am),y=mpg, guides(fill=guide_legend(title=NULL)),fill=factor(am)))
g1 + geom_boxplot() + facet_grid(.~am) +
xlab("Dosage") +
ylab("Length of teeth") +
labs(title="Exploratory Data Analysis")+
theme(legend.title=element_blank())+
geom_point()
g1 + geom_boxplot()
g1 <- ggplot(mpg, aes(x=factor(am),y=mpg, guides(fill=guide_legend(title=NULL)),fill=factor(am)))
g1
g1 + geom_boxplot()
g1 <- ggplot(mpg, aes(x=factor(mtcars$am),y=mtcars$mpg, guides(fill=guide_legend(title=NULL)),fill=factor(am)))
g1 + geom_boxplot() + facet_grid(.~am) +
xlab("Dosage") +
ylab("Length of teeth") +
labs(title="Exploratory Data Analysis")+
theme(legend.title=element_blank())+
geom_point()
g1 <- ggplot(mpg, aes(x=factor(mtcars$am),y=mtcars$mpg, guides(fill=guide_legend(title=NULL)),fill=factor(mtcars$am)))
g1 + geom_boxplot() + facet_grid(.~mtcars$am) +
xlab("Dosage") +
ylab("Length of teeth") +
labs(title="Exploratory Data Analysis")+
theme(legend.title=element_blank())+
geom_point()
library(ggplot2)
g1 <- ggplot(ToothGrowth, aes(x=factor(dose),y=len, guides(fill=guide_legend(title=NULL)),fill=factor(dose)))
g1 + geom_boxplot() + facet_grid(.~supp) +
xlab("Dosage") +
ylab("Length of teeth") +
labs(title="Exploratory Data Analysis")+
theme(legend.title=element_blank())+
geom_point()
g1 <- ggplot(mtcars, aes(x=factor(mtcars$am),y=mtcars$mpg, guides(fill=guide_legend(title=NULL)),fill=factor(mtcars$am)))
g1 + geom_boxplot() + facet_grid(.~mtcars$am) +
xlab("Dosage") +
ylab("Length of teeth") +
labs(title="Exploratory Data Analysis")+
theme(legend.title=element_blank())+
geom_point()
g1 <- ggplot(mtcars, aes(x=factor(am),y=mtcars$mpg, guides(fill=guide_legend(title=NULL)),fill=factor(am)))
g1 + geom_boxplot() + facet_grid(.~am) +
xlab("Dosage") +
ylab("Length of teeth") +
labs(title="Exploratory Data Analysis")+
theme(legend.title=element_blank())+
geom_point()
g1 <- ggplot(mtcars, aes(x=factor(am),y=mtcars$mpg, guides(fill=guide_legend(title=NULL)),fill=factor(am)))
g1 + geom_boxplot()  +
xlab("Dosage") +
ylab("Length of teeth") +
labs(title="Exploratory Data Analysis")+
theme(legend.title=element_blank())+
geom_point()
g1 <- ggplot(mtcars, aes(x=factor(am),y=mtcars$mpg, guides(fill=guide_legend(title=NULL)),fill=factor(am)))
g1 + geom_boxplot()  +
xlab("Transmission") +
ylab("MPG") +
labs(title="Exploratory Data Analysis")+
theme(legend.title=element_blank())+
geom_point()
model.1 <- lm(mpg ~ ., mtcars)
anova(model.1)
anova(model.1)$response
anova(model.1)$Response
summary(model.1)$coef
vif(model.1)
install.packages("car")
View(mtcars)
vif(allVarModel)
install.packages("lme4")
install.packages("pbkrtest")
install.packages("car")
library("car", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
vif(allVarModel)
allVarModel <- lm(mpg ~ ., mtcars)
vif(allVarModel)
amWtModel<- lm(mpg ~ am + wt, mtcars)
vif(amWtModel)
anova(amWtModel)$coef
anova(amWtModel)
install_from_swirl("Regression Models")
library("swirl", lib.loc="~/R/x86_64-redhat-linux-gnu-library/3.1")
install_from_swirl("Regression Models")
swirl()
lm(Fertility~.,data=swiss)
all <- lm(Fertility ~ ., swiss)
summary(all)
l<-lm(Fertility~Agriculture,data=swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(Examination,Education)
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
q
q()
source('~/Desktop/quiz4Inference.R')
(yhat[10]-yhat[6])/4
suppressPackageStartupMessages(library(dplyr))
file<-"activity.zip"
temp<-unzip(file)
data<-read.csv(temp)
data<-tbl_df(data)
getwd()
setwd("/home/Calin/Desktop/coursera/RepData_PeerAssessment1/")
suppressPackageStartupMessages(library(dplyr))
file<-"activity.zip"
temp<-unzip(file)
data<-read.csv(temp)
data<-tbl_df(data)
suppressPackageStartupMessages(library(dplyr))
file<-"activity.zip"
temp<-unzip(file)
data<-read.csv(temp)
data<-tbl_df(data)
View(data)
table(data[1,2])
table(data$steps,data$date)
barplot(table(data$steps,data$date))
?groupby
?group_by
group_by(data,date,steps)
by_date<-group_by(data,date,steps)
sumamrise(by_date)
summarise(by_date)
summarise(by_date,n=sum(n))
summarise(by_date,n=n())
?summarise
summarise(by_date,n=sum(steps))
suppressPackageStartupMessages(library(dplyr))
file<-"activity.zip"
temp<-unzip(file)
data<-read.csv(temp)
table(data$date,data$steps)
t<-table(data$date,data$steps)
rowSums(t)
r<-rowSums(t)
hist(r)
r
t
suppressPackageStartupMessages(library(dplyr))
file<-"activity.zip"
temp<-unzip(file)
data<-read.csv(temp)
data<-tbl_df(data)
data
by_date<-group_by(data,date,steps)
summarise(by_date)
steps_by_day <- aggregate(steps ~ date, data, sum)
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
steps_by_day
hist(stepsByDay$steps, main = paste("Total number of steps taken per day"), col="blue", xlab="# steps",breaks=60)
summary(steps_by_day)
summary(steps_by_day)$steps
summary(steps_by_day)[[steps]]
summary(steps_by_day)[["steps"]]
s<-summary(steps_by_day)
s
s[,2]
s[3,2]
s[4,2]
as.data.frame(s)
?melt
??melt
??dcast
